-- Usuários cadastrados no sistema
CREATE TABLE Usuario (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senhaHash VARCHAR(255) NOT NULL,
    dataCadastro DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Registros de login podem ser feitos em tabela separada caso você deseje armazenar histórico
-- Formulários preenchidos pelos usuários
CREATE TABLE Formulario (
    id INT PRIMARY KEY AUTO_INCREMENT,
    usuarioId INT NOT NULL,
    dataPreenchimento DATETIME DEFAULT CURRENT_TIMESTAMP,
    ativo BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (usuarioId) REFERENCES Usuario(id)
);

-- Todas as perguntas possíveis (de múltipla escolha)
CREATE TABLE Pergunta (
    id INT PRIMARY KEY AUTO_INCREMENT,
    texto TEXT NOT NULL,
    ordem INT NOT NULL
);

-- Alternativas de múltipla escolha para cada pergunta
CREATE TABLE Alternativa (
    id INT PRIMARY KEY AUTO_INCREMENT,
    perguntaId INT NOT NULL,
    texto VARCHAR(255) NOT NULL,
    FOREIGN KEY (perguntaId) REFERENCES Pergunta(id)
);

-- Respostas dadas em formulários, apontando para alternativas
CREATE TABLE Resposta (
    id INT PRIMARY KEY AUTO_INCREMENT,
    formularioId INT NOT NULL,
    perguntaId INT NOT NULL,
    alternativaId INT NOT NULL,
    FOREIGN KEY (formularioId) REFERENCES Formulario(id),
    FOREIGN KEY (perguntaId) REFERENCES Pergunta(id),
    FOREIGN KEY (alternativaId) REFERENCES Alternativa(id)
);

-- Conteúdos exibidos aos usuários
CREATE TABLE Conteudo (
    id INT PRIMARY KEY AUTO_INCREMENT,
    titulo VARCHAR(255) NOT NULL,
    descricao TEXT,
    tipo VARCHAR(50) NOT NULL,  -- 'diario' ou 'semanal'
    url TEXT,
    dataCriacao DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Regras de associação entre perfis (ou características) e conteúdos
CREATE TABLE ConteudoAlvo (
    id INT PRIMARY KEY AUTO_INCREMENT,
    conteudoId INT NOT NULL,
    perguntaId INT NOT NULL,
    alternativaId INT NOT NULL,
    FOREIGN KEY (conteudoId) REFERENCES Conteudo(id),
    FOREIGN KEY (perguntaId) REFERENCES Pergunta(id),
    FOREIGN KEY (alternativaId) REFERENCES Alternativa(id)
);

-- Registro de qual conteúdo foi entregue a qual usuário, e quando
CREATE TABLE EntregaConteudo (
    id INT PRIMARY KEY AUTO_INCREMENT,
    usuarioId INT NOT NULL,
    conteudoId INT NOT NULL,
    dataEntrega DATE NOT NULL,
    FOREIGN KEY (usuarioId) REFERENCES Usuario(id),
    FOREIGN KEY (conteudoId) REFERENCES Conteudo(id)
);

-- Administradores responsáveis por cadastrar conteúdos
CREATE TABLE Admin (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senhaHash VARCHAR(255) NOT NULL
);

-- Conteúdos criados por administradores
CREATE TABLE ConteudoAdmin (
    id INT PRIMARY KEY AUTO_INCREMENT,
    conteudoId INT NOT NULL,
    adminId INT NOT NULL,
    dataCriacao DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (conteudoId) REFERENCES Conteudo(id),
    FOREIGN KEY (adminId) REFERENCES Admin(id)
);
